From 2f227c0ac521866f991677be6a1324575237d04d Mon Sep 17 00:00:00 2001
From: Jan Kiszka <jan.kiszka@siemens.com>
Date: Mon, 18 Jan 2021 09:13:17 +0100
Subject: [PATCH 07/11] iot2050: Switch to runtime detection of gpiochip
 numbers and bases

This makes the logic independent of the gpiochip probing order.

Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>
---
 src/arm/siemens/iot2050.c | 277 ++++++++++++++++++++++----------------
 1 file changed, 164 insertions(+), 113 deletions(-)

diff --git a/src/arm/siemens/iot2050.c b/src/arm/siemens/iot2050.c
index 0035404..a042bf3 100644
--- a/src/arm/siemens/iot2050.c
+++ b/src/arm/siemens/iot2050.c
@@ -27,16 +27,12 @@
 #include <mraa/types.h>
 
 #include "common.h"
+#include "gpio/gpio_chardev.h"
 #include "arm/siemens/iot2050.h"
 #include "arm/siemens/platform.h"
 
 #define PINMUX_GROUP_MAIN       (0)
 #define PINMUX_GROUP_WAKUP      (1)
-#define MAIN_GPIO0_BASE         (0)
-#define WKUP_GPIO0_BASE         (186)
-#define D4200_GPIO_BASE         (496)
-#define D4201_GPIO_BASE         (480)
-#define D4202_GPIO_BASE         (464)
 
 typedef struct {
     uint8_t     group;
@@ -373,6 +369,61 @@ mraa_siemens_iot2050()
     mraa_board_t* b = (mraa_board_t*) calloc(1, sizeof(mraa_board_t));
     mraa_mux_t mux_info[6];
     int pin_index = 0;
+    unsigned main_gpio0_chip, main_gpio0_base;
+    unsigned wkup_gpio0_chip, wkup_gpio0_base;
+    unsigned d4200_gpio_chip, d4200_gpio_base;
+    unsigned d4201_gpio_chip, d4201_gpio_base;
+    unsigned d4202_gpio_chip, d4202_gpio_base;
+    unsigned line_offset;
+    int res;
+
+    if (mraa_find_gpio_line_by_name("main_gpio0-base", &main_gpio0_chip, &line_offset) < 0 || line_offset != 0) {
+        goto error;
+    }
+    res = mraa_get_chip_base_by_number(main_gpio0_chip);
+    if (res < 0) {
+        goto error;
+    }
+    main_gpio0_base = res;
+
+    if (mraa_find_gpio_line_by_name("wkup_gpio0-base", &wkup_gpio0_chip, &line_offset) < 0 || line_offset != 0) {
+        goto error;
+    }
+    res = mraa_get_chip_base_by_number(wkup_gpio0_chip);
+    if (res < 0) {
+        goto error;
+    }
+    wkup_gpio0_base = res;
+
+    /* A0-pull is line 0 in D4200 */
+    if (mraa_find_gpio_line_by_name("A0-pull", &d4200_gpio_chip, &line_offset) < 0 || line_offset != 0) {
+        goto error;
+    }
+    res = mraa_get_chip_base_by_number(d4200_gpio_chip);
+    if (res < 0) {
+        goto error;
+    }
+    d4200_gpio_base = res;
+
+    /* IO0-direction is line 0 in D4201 */
+    if (mraa_find_gpio_line_by_name("IO0-direction", &d4201_gpio_chip, &line_offset) < 0 || line_offset != 0) {
+        goto error;
+    }
+    res = mraa_get_chip_base_by_number(d4201_gpio_chip);
+    if (res < 0) {
+        goto error;
+    }
+    d4201_gpio_base = res;
+
+    /* IO0-pull is line 0 in D4202 */
+    if (mraa_find_gpio_line_by_name("IO0-pull", &d4202_gpio_chip, &line_offset) < 0 || line_offset != 0) {
+        goto error;
+    }
+    res = mraa_get_chip_base_by_number(d4202_gpio_chip);
+    if (res < 0) {
+        goto error;
+    }
+    d4202_gpio_base = res;
 
     if(b == NULL) {
         return NULL;
@@ -414,7 +465,7 @@ mraa_siemens_iot2050()
                         (regmux_info_t) {
                             PINMUX_GROUP_WAKUP,
                             17,
-                            WKUP_GPIO0_BASE+29,
+                            wkup_gpio0_base+29,
                             {
                                 7,  /*GPIO*/
                                 4,  /*UART*/
@@ -424,11 +475,11 @@ mraa_siemens_iot2050()
                             }
                         });
 
-    iot2050_pin_add_gpio(b, pin_index, 2, 29, D4201_GPIO_BASE+0, D4202_GPIO_BASE+0, NULL, 0);
-    mux_info[0].pin = D4201_GPIO_BASE+0;
+    iot2050_pin_add_gpio(b, pin_index, wkup_gpio0_chip, 29, d4201_gpio_base+0, d4202_gpio_base+0, NULL, 0);
+    mux_info[0].pin = d4201_gpio_base+0;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_OUT_LOW;
-    mux_info[1].pin = D4202_GPIO_BASE+0;
+    mux_info[1].pin = d4202_gpio_base+0;
     mux_info[1].pincmd = PINCMD_SET_DIRECTION;
     mux_info[1].value = MRAA_GPIO_IN;
     iot2050_pin_add_uart(b, pin_index, 0, mux_info, 2);
@@ -447,7 +498,7 @@ mraa_siemens_iot2050()
                         (regmux_info_t) {
                             PINMUX_GROUP_WAKUP,
                             18,
-                            WKUP_GPIO0_BASE+30,
+                            wkup_gpio0_base+30,
                             {
                                 7,  /*GPIO*/
                                 4,  /*UART*/
@@ -456,11 +507,11 @@ mraa_siemens_iot2050()
                                 -1  /*PWM*/
                             }
                         });
-    iot2050_pin_add_gpio(b, pin_index, 2, 30, D4201_GPIO_BASE+1, D4202_GPIO_BASE+1, NULL, 0);
-    mux_info[0].pin = D4201_GPIO_BASE+1;
+    iot2050_pin_add_gpio(b, pin_index, wkup_gpio0_chip, 30, d4201_gpio_base+1, d4202_gpio_base+1, NULL, 0);
+    mux_info[0].pin = d4201_gpio_base+1;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_OUT_HIGH;
-    mux_info[1].pin = D4202_GPIO_BASE+1;
+    mux_info[1].pin = d4202_gpio_base+1;
     mux_info[1].pincmd = PINCMD_SET_DIRECTION;
     mux_info[1].value = MRAA_GPIO_IN;
     iot2050_pin_add_uart(b, pin_index, 0, mux_info, 2);
@@ -479,7 +530,7 @@ mraa_siemens_iot2050()
                         (regmux_info_t) {
                             PINMUX_GROUP_WAKUP,
                             19,
-                            WKUP_GPIO0_BASE+31,
+                            wkup_gpio0_base+31,
                             {
                                 7,  /*GPIO*/
                                 4,  /*UART*/
@@ -488,11 +539,11 @@ mraa_siemens_iot2050()
                                 -1  /*PWM*/
                             }
                         });
-    iot2050_pin_add_gpio(b, pin_index, 2, 31, D4201_GPIO_BASE+2, D4202_GPIO_BASE+2, NULL, 0);
-    mux_info[0].pin = D4201_GPIO_BASE+2;
+    iot2050_pin_add_gpio(b, pin_index, wkup_gpio0_chip, 31, d4201_gpio_base+2, d4202_gpio_base+2, NULL, 0);
+    mux_info[0].pin = d4201_gpio_base+2;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_OUT_LOW;
-    mux_info[1].pin = D4202_GPIO_BASE+2;
+    mux_info[1].pin = d4202_gpio_base+2;
     mux_info[1].pincmd = PINCMD_SET_DIRECTION;
     mux_info[1].value = MRAA_GPIO_IN;
     iot2050_pin_add_uart(b, pin_index, 0, mux_info, 2);
@@ -511,7 +562,7 @@ mraa_siemens_iot2050()
                         (regmux_info_t) {
                             PINMUX_GROUP_WAKUP,
                             21,
-                            WKUP_GPIO0_BASE+33,
+                            wkup_gpio0_base+33,
                             {
                                 7,  /*GPIO*/
                                 4,  /*UART*/
@@ -520,11 +571,11 @@ mraa_siemens_iot2050()
                                 -1  /*PWM*/
                             }
                         });
-    iot2050_pin_add_gpio(b, pin_index, 2, 33, D4201_GPIO_BASE+3, D4202_GPIO_BASE+3, NULL, 0);
-    mux_info[0].pin = D4201_GPIO_BASE+3;
+    iot2050_pin_add_gpio(b, pin_index, wkup_gpio0_chip, 33, d4201_gpio_base+3, d4202_gpio_base+3, NULL, 0);
+    mux_info[0].pin = d4201_gpio_base+3;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_OUT_HIGH;
-    mux_info[1].pin = D4202_GPIO_BASE+3;
+    mux_info[1].pin = d4202_gpio_base+3;
     mux_info[1].pincmd = PINCMD_SET_DIRECTION;
     mux_info[1].value = MRAA_GPIO_IN;
     iot2050_pin_add_uart(b, pin_index, 0, mux_info, 2);
@@ -543,7 +594,7 @@ mraa_siemens_iot2050()
                         (regmux_info_t) {
                             PINMUX_GROUP_MAIN,
                             33,
-                            MAIN_GPIO0_BASE+33,
+                            main_gpio0_base+33,
                             {
                                 7,  /*GPIO*/
                                 -1, /*UART*/
@@ -552,11 +603,11 @@ mraa_siemens_iot2050()
                                 5   /*PWM*/
                             }
                         });
-    iot2050_pin_add_gpio(b, pin_index, 0, 33, D4201_GPIO_BASE+4, D4202_GPIO_BASE+4, NULL, 0);
-    mux_info[0].pin = D4201_GPIO_BASE+4;
+    iot2050_pin_add_gpio(b, pin_index, main_gpio0_chip, 33, d4201_gpio_base+4, d4202_gpio_base+4, NULL, 0);
+    mux_info[0].pin = d4201_gpio_base+4;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_OUT_HIGH;
-    mux_info[1].pin = D4202_GPIO_BASE+4;
+    mux_info[1].pin = d4202_gpio_base+4;
     mux_info[1].pincmd = PINCMD_SET_DIRECTION;
     mux_info[1].value = MRAA_GPIO_IN;
     iot2050_pin_add_pwm(b, pin_index, 0, 0, mux_info, 2);
@@ -575,7 +626,7 @@ mraa_siemens_iot2050()
                         (regmux_info_t) {
                             PINMUX_GROUP_MAIN,
                             35,
-                            MAIN_GPIO0_BASE+35,
+                            main_gpio0_base+35,
                             {
                                 7,  /*GPIO*/
                                 -1, /*UART*/
@@ -584,11 +635,11 @@ mraa_siemens_iot2050()
                                 5   /*PWM*/
                             }
                         });
-    iot2050_pin_add_gpio(b, pin_index, 0, 35, D4201_GPIO_BASE+5, D4202_GPIO_BASE+5, NULL, 0);
-    mux_info[0].pin = D4201_GPIO_BASE+5;
+    iot2050_pin_add_gpio(b, pin_index, main_gpio0_chip, 35, d4201_gpio_base+5, d4202_gpio_base+5, NULL, 0);
+    mux_info[0].pin = d4201_gpio_base+5;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_OUT_HIGH;
-    mux_info[1].pin = D4202_GPIO_BASE+5;
+    mux_info[1].pin = d4202_gpio_base+5;
     mux_info[1].pincmd = PINCMD_SET_DIRECTION;
     mux_info[1].value = MRAA_GPIO_IN;
     iot2050_pin_add_pwm(b, pin_index, 2, 0, mux_info, 2);
@@ -607,7 +658,7 @@ mraa_siemens_iot2050()
                         (regmux_info_t) {
                             PINMUX_GROUP_MAIN,
                             38,
-                            MAIN_GPIO0_BASE+38,
+                            main_gpio0_base+38,
                             {
                                 7,  /*GPIO*/
                                 -1, /*UART*/
@@ -616,11 +667,11 @@ mraa_siemens_iot2050()
                                 5   /*PWM*/
                             }
                         });
-    iot2050_pin_add_gpio(b, pin_index, 0, 38, D4201_GPIO_BASE+6, D4202_GPIO_BASE+6, NULL, 0);
-    mux_info[0].pin = D4201_GPIO_BASE+6;
+    iot2050_pin_add_gpio(b, pin_index, main_gpio0_chip, 38, d4201_gpio_base+6, d4202_gpio_base+6, NULL, 0);
+    mux_info[0].pin = d4201_gpio_base+6;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_OUT_HIGH;
-    mux_info[1].pin = D4202_GPIO_BASE+6;
+    mux_info[1].pin = d4202_gpio_base+6;
     mux_info[1].pincmd = PINCMD_SET_DIRECTION;
     mux_info[1].value = MRAA_GPIO_IN;
     iot2050_pin_add_pwm(b, pin_index, 4, 0, mux_info, 2);
@@ -639,7 +690,7 @@ mraa_siemens_iot2050()
                         (regmux_info_t) {
                             PINMUX_GROUP_MAIN,
                             43,
-                            MAIN_GPIO0_BASE+43,
+                            main_gpio0_base+43,
                             {
                                 7,  /*GPIO*/
                                 -1, /*UART*/
@@ -648,11 +699,11 @@ mraa_siemens_iot2050()
                                 5   /*PWM*/
                             }
                         });
-    iot2050_pin_add_gpio(b, pin_index, 0, 43, D4201_GPIO_BASE+7, D4202_GPIO_BASE+7, NULL, 0);
-    mux_info[0].pin = D4201_GPIO_BASE+7;
+    iot2050_pin_add_gpio(b, pin_index, main_gpio0_chip, 43, d4201_gpio_base+7, d4202_gpio_base+7, NULL, 0);
+    mux_info[0].pin = d4201_gpio_base+7;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_OUT_HIGH;
-    mux_info[1].pin = D4202_GPIO_BASE+7;
+    mux_info[1].pin = d4202_gpio_base+7;
     mux_info[1].pincmd = PINCMD_SET_DIRECTION;
     mux_info[1].value = MRAA_GPIO_IN;
     iot2050_pin_add_pwm(b, pin_index, 6, 0, mux_info, 2);
@@ -671,7 +722,7 @@ mraa_siemens_iot2050()
                         (regmux_info_t) {
                             PINMUX_GROUP_MAIN,
                             48,
-                            MAIN_GPIO0_BASE+48,
+                            main_gpio0_base+48,
                             {
                                 7,  /*GPIO*/
                                 -1, /*UART*/
@@ -680,11 +731,11 @@ mraa_siemens_iot2050()
                                 5   /*PWM*/
                             }
                         });
-    iot2050_pin_add_gpio(b, pin_index, 0, 48, D4201_GPIO_BASE+8, D4202_GPIO_BASE+8, NULL, 0);
-    mux_info[0].pin = D4201_GPIO_BASE+8;
+    iot2050_pin_add_gpio(b, pin_index, main_gpio0_chip, 48, d4201_gpio_base+8, d4202_gpio_base+8, NULL, 0);
+    mux_info[0].pin = d4201_gpio_base+8;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_OUT_HIGH;
-    mux_info[1].pin = D4202_GPIO_BASE+8;
+    mux_info[1].pin = d4202_gpio_base+8;
     mux_info[1].pincmd = PINCMD_SET_DIRECTION;
     mux_info[1].value = MRAA_GPIO_IN;
     iot2050_pin_add_pwm(b, pin_index, 8, 0, mux_info, 2);
@@ -703,7 +754,7 @@ mraa_siemens_iot2050()
                         (regmux_info_t) {
                             PINMUX_GROUP_MAIN,
                             51,
-                            MAIN_GPIO0_BASE+51,
+                            main_gpio0_base+51,
                             {
                                 7,  /*GPIO*/
                                 -1, /*UART*/
@@ -712,11 +763,11 @@ mraa_siemens_iot2050()
                                 5   /*PWM*/
                             }
                         });
-    iot2050_pin_add_gpio(b, pin_index, 0, 51, D4201_GPIO_BASE+9, D4202_GPIO_BASE+9, NULL, 0);
-    mux_info[0].pin = D4201_GPIO_BASE+9;
+    iot2050_pin_add_gpio(b, pin_index, main_gpio0_chip, 51, d4201_gpio_base+9, d4202_gpio_base+9, NULL, 0);
+    mux_info[0].pin = d4201_gpio_base+9;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_OUT_HIGH;
-    mux_info[1].pin = D4202_GPIO_BASE+9;
+    mux_info[1].pin = d4202_gpio_base+9;
     mux_info[1].pincmd = PINCMD_SET_DIRECTION;
     mux_info[1].value = MRAA_GPIO_IN;
     iot2050_pin_add_pwm(b, pin_index, 10, 0, mux_info, 2);
@@ -735,7 +786,7 @@ mraa_siemens_iot2050()
                         (regmux_info_t) {
                             PINMUX_GROUP_WAKUP,
                             39,
-                            WKUP_GPIO0_BASE+51,
+                            wkup_gpio0_base+51,
                             {
                                 7,  /*GPIO*/
                                 -1, /*UART*/
@@ -744,11 +795,11 @@ mraa_siemens_iot2050()
                                 -1  /*PWM*/
                             }
                         });
-    iot2050_pin_add_gpio(b, pin_index, 2, 51, D4201_GPIO_BASE+10, D4202_GPIO_BASE+10, NULL, 0);
-    mux_info[0].pin = D4201_GPIO_BASE+10;
+    iot2050_pin_add_gpio(b, pin_index, wkup_gpio0_chip, 51, d4201_gpio_base+10, d4202_gpio_base+10, NULL, 0);
+    mux_info[0].pin = d4201_gpio_base+10;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_OUT_HIGH;
-    mux_info[1].pin = D4202_GPIO_BASE+10;
+    mux_info[1].pin = d4202_gpio_base+10;
     mux_info[1].pincmd = PINCMD_SET_DIRECTION;
     mux_info[1].value = MRAA_GPIO_IN;
     iot2050_pin_add_spi(b, pin_index, 0, mux_info, 2);
@@ -767,7 +818,7 @@ mraa_siemens_iot2050()
                         (regmux_info_t) {
                             PINMUX_GROUP_WAKUP,
                             37,
-                            WKUP_GPIO0_BASE+49,
+                            wkup_gpio0_base+49,
                             {
                                 7,  /*GPIO*/
                                 -1, /*UART*/
@@ -776,11 +827,11 @@ mraa_siemens_iot2050()
                                 -1  /*PWM*/
                             }
                         });
-    iot2050_pin_add_gpio(b, pin_index, 2, 49, D4201_GPIO_BASE+11, D4202_GPIO_BASE+11, NULL, 0);
-    mux_info[0].pin = D4201_GPIO_BASE+11;
+    iot2050_pin_add_gpio(b, pin_index, wkup_gpio0_chip, 49, d4201_gpio_base+11, d4202_gpio_base+11, NULL, 0);
+    mux_info[0].pin = d4201_gpio_base+11;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_OUT_HIGH;
-    mux_info[1].pin = D4202_GPIO_BASE+11;
+    mux_info[1].pin = d4202_gpio_base+11;
     mux_info[1].pincmd = PINCMD_SET_DIRECTION;
     mux_info[1].value = MRAA_GPIO_IN;
     iot2050_pin_add_spi(b, pin_index, 0, mux_info, 2);
@@ -799,7 +850,7 @@ mraa_siemens_iot2050()
                         (regmux_info_t) {
                             PINMUX_GROUP_WAKUP,
                             38,
-                            WKUP_GPIO0_BASE+50,
+                            wkup_gpio0_base+50,
                             {
                                 7,  /*GPIO*/
                                 -1, /*UART*/
@@ -808,11 +859,11 @@ mraa_siemens_iot2050()
                                 -1  /*PWM*/
                             }
                         });
-    iot2050_pin_add_gpio(b, pin_index, 2, 50, D4201_GPIO_BASE+12, D4202_GPIO_BASE+12, NULL, 0);
-    mux_info[0].pin = D4201_GPIO_BASE+12;
+    iot2050_pin_add_gpio(b, pin_index, wkup_gpio0_chip, 50, d4201_gpio_base+12, d4202_gpio_base+12, NULL, 0);
+    mux_info[0].pin = d4201_gpio_base+12;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_OUT_LOW;
-    mux_info[1].pin = D4202_GPIO_BASE+12;
+    mux_info[1].pin = d4202_gpio_base+12;
     mux_info[1].pincmd = PINCMD_SET_DIRECTION;
     mux_info[1].value = MRAA_GPIO_IN;
     iot2050_pin_add_spi(b, pin_index, 0, mux_info, 2);
@@ -831,7 +882,7 @@ mraa_siemens_iot2050()
                         (regmux_info_t) {
                             PINMUX_GROUP_WAKUP,
                             36,
-                            WKUP_GPIO0_BASE+48,
+                            wkup_gpio0_base+48,
                             {
                                 7,  /*GPIO*/
                                 -1, /*UART*/
@@ -840,11 +891,11 @@ mraa_siemens_iot2050()
                                 -1  /*PWM*/
                             }
                         });
-    iot2050_pin_add_gpio(b, pin_index, 2, 48, D4201_GPIO_BASE+13, D4202_GPIO_BASE+13, NULL, 0);
-    mux_info[0].pin = D4201_GPIO_BASE+13;
+    iot2050_pin_add_gpio(b, pin_index, wkup_gpio0_chip, 48, d4201_gpio_base+13, d4202_gpio_base+13, NULL, 0);
+    mux_info[0].pin = d4201_gpio_base+13;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_OUT_HIGH;
-    mux_info[1].pin = D4202_GPIO_BASE+13;
+    mux_info[1].pin = d4202_gpio_base+13;
     mux_info[1].pincmd = PINCMD_SET_DIRECTION;
     mux_info[1].value = MRAA_GPIO_IN;
     iot2050_pin_add_spi(b, pin_index, 0, mux_info, 2);
@@ -863,7 +914,7 @@ mraa_siemens_iot2050()
                         (regmux_info_t) {
                             PINMUX_GROUP_WAKUP,
                             33,
-                            WKUP_GPIO0_BASE+45,
+                            wkup_gpio0_base+45,
                             {
                                 7,  /*GPIO*/
                                 -1, /*UART*/
@@ -872,24 +923,24 @@ mraa_siemens_iot2050()
                                 -1  /*PWM*/
                             }
                         });
-    mux_info[0].pin = D4200_GPIO_BASE+8;
+    mux_info[0].pin = d4200_gpio_base+8;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_OUT_LOW;
-    iot2050_pin_add_gpio(b, pin_index, 2, 45, WKUP_GPIO0_BASE+38, D4200_GPIO_BASE+0, mux_info, 1);
+    iot2050_pin_add_gpio(b, pin_index, wkup_gpio0_chip, 45, wkup_gpio0_base+38, d4200_gpio_base+0, mux_info, 1);
     // D/A switch
-    mux_info[0].pin = D4200_GPIO_BASE+8;
+    mux_info[0].pin = d4200_gpio_base+8;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_IN;
     // muxed GPIO as input
-    mux_info[1].pin = WKUP_GPIO0_BASE+45;
+    mux_info[1].pin = wkup_gpio0_base+45;
     mux_info[1].pincmd = PINCMD_SET_DIRECTION;
     mux_info[1].value = MRAA_GPIO_IN;
     // output enable as input
-    mux_info[2].pin = WKUP_GPIO0_BASE+38;
+    mux_info[2].pin = wkup_gpio0_base+38;
     mux_info[2].pincmd = PINCMD_SET_DIRECTION;
     mux_info[2].value = MRAA_GPIO_OUT_LOW;
     // pull enable as input
-    mux_info[3].pin = D4200_GPIO_BASE+0;
+    mux_info[3].pin = d4200_gpio_base+0;
     mux_info[3].pincmd = PINCMD_SET_DIRECTION;
     mux_info[3].value = MRAA_GPIO_IN;
     iot2050_pin_add_aio(b, pin_index, 0, mux_info, 4);
@@ -908,7 +959,7 @@ mraa_siemens_iot2050()
                         (regmux_info_t) {
                             PINMUX_GROUP_WAKUP,
                             32,
-                            WKUP_GPIO0_BASE+44,
+                            wkup_gpio0_base+44,
                             {
                                 7,  /*GPIO*/
                                 -1, /*UART*/
@@ -917,24 +968,24 @@ mraa_siemens_iot2050()
                                 -1  /*PWM*/
                             }
                         });
-    mux_info[0].pin = D4200_GPIO_BASE+9;
+    mux_info[0].pin = d4200_gpio_base+9;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_OUT_LOW;
-    iot2050_pin_add_gpio(b, pin_index, 2, 44, WKUP_GPIO0_BASE+37, D4200_GPIO_BASE+1, mux_info, 1);
+    iot2050_pin_add_gpio(b, pin_index, wkup_gpio0_chip, 44, wkup_gpio0_base+37, d4200_gpio_base+1, mux_info, 1);
     // D/A switch
-    mux_info[0].pin = D4200_GPIO_BASE+9;
+    mux_info[0].pin = d4200_gpio_base+9;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_IN;
     // muxed GPIO as input
-    mux_info[1].pin = WKUP_GPIO0_BASE+44;
+    mux_info[1].pin = wkup_gpio0_base+44;
     mux_info[1].pincmd = PINCMD_SET_DIRECTION;
     mux_info[1].value = MRAA_GPIO_IN;
     // output enable as input
-    mux_info[2].pin = WKUP_GPIO0_BASE+37;
+    mux_info[2].pin = wkup_gpio0_base+37;
     mux_info[2].pincmd = PINCMD_SET_DIRECTION;
     mux_info[2].value = MRAA_GPIO_OUT_LOW;
     // pull enable as input
-    mux_info[3].pin = D4200_GPIO_BASE+1;
+    mux_info[3].pin = d4200_gpio_base+1;
     mux_info[3].pincmd = PINCMD_SET_DIRECTION;
     mux_info[3].value = MRAA_GPIO_IN;
     iot2050_pin_add_aio(b, pin_index, 1, mux_info, 4);
@@ -953,7 +1004,7 @@ mraa_siemens_iot2050()
                         (regmux_info_t) {
                             PINMUX_GROUP_WAKUP,
                             31,
-                            WKUP_GPIO0_BASE+43,
+                            wkup_gpio0_base+43,
                             {
                                 7,  /*GPIO*/
                                 -1, /*UART*/
@@ -962,24 +1013,24 @@ mraa_siemens_iot2050()
                                 -1  /*PWM*/
                             }
                         });
-    mux_info[0].pin = D4200_GPIO_BASE+10;
+    mux_info[0].pin = d4200_gpio_base+10;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_OUT_LOW;
-    iot2050_pin_add_gpio(b, pin_index, 2, 43, WKUP_GPIO0_BASE+36, D4200_GPIO_BASE+2, mux_info, 1);
+    iot2050_pin_add_gpio(b, pin_index, wkup_gpio0_chip, 43, wkup_gpio0_base+36, d4200_gpio_base+2, mux_info, 1);
     // D/A switch
-    mux_info[0].pin = D4200_GPIO_BASE+10;
+    mux_info[0].pin = d4200_gpio_base+10;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_IN;
     // muxed GPIO as input
-    mux_info[1].pin = WKUP_GPIO0_BASE+43;
+    mux_info[1].pin = wkup_gpio0_base+43;
     mux_info[1].pincmd = PINCMD_SET_DIRECTION;
     mux_info[1].value = MRAA_GPIO_IN;
     // output enable as input
-    mux_info[2].pin = WKUP_GPIO0_BASE+36;
+    mux_info[2].pin = wkup_gpio0_base+36;
     mux_info[2].pincmd = PINCMD_SET_DIRECTION;
     mux_info[2].value = MRAA_GPIO_OUT_LOW;
     // pull enable as input
-    mux_info[3].pin = D4200_GPIO_BASE+2;
+    mux_info[3].pin = d4200_gpio_base+2;
     mux_info[3].pincmd = PINCMD_SET_DIRECTION;
     mux_info[3].value = MRAA_GPIO_IN;
     iot2050_pin_add_aio(b, pin_index, 2, mux_info, 4);
@@ -998,7 +1049,7 @@ mraa_siemens_iot2050()
                         (regmux_info_t) {
                             PINMUX_GROUP_WAKUP,
                             27,
-                            WKUP_GPIO0_BASE+39,
+                            wkup_gpio0_base+39,
                             {
                                 7,  /*GPIO*/
                                 -1, /*UART*/
@@ -1007,24 +1058,24 @@ mraa_siemens_iot2050()
                                 -1  /*PWM*/
                             }
                         });
-    mux_info[0].pin = D4200_GPIO_BASE+11;
+    mux_info[0].pin = d4200_gpio_base+11;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_OUT_LOW;
-    iot2050_pin_add_gpio(b, pin_index, 2, 39, WKUP_GPIO0_BASE+34, D4200_GPIO_BASE+3, mux_info, 1);
+    iot2050_pin_add_gpio(b, pin_index, wkup_gpio0_chip, 39, wkup_gpio0_base+34, d4200_gpio_base+3, mux_info, 1);
     // D/A switch
-    mux_info[0].pin = D4200_GPIO_BASE+11;
+    mux_info[0].pin = d4200_gpio_base+11;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_IN;
     // muxed GPIO as input
-    mux_info[1].pin = WKUP_GPIO0_BASE+39;
+    mux_info[1].pin = wkup_gpio0_base+39;
     mux_info[1].pincmd = PINCMD_SET_DIRECTION;
     mux_info[1].value = MRAA_GPIO_IN;
     // output enable as input
-    mux_info[2].pin = WKUP_GPIO0_BASE+34;
+    mux_info[2].pin = wkup_gpio0_base+34;
     mux_info[2].pincmd = PINCMD_SET_DIRECTION;
     mux_info[2].value = MRAA_GPIO_OUT_LOW;
     // pull enable as input
-    mux_info[3].pin = D4200_GPIO_BASE+3;
+    mux_info[3].pin = d4200_gpio_base+3;
     mux_info[3].pincmd = PINCMD_SET_DIRECTION;
     mux_info[3].value = MRAA_GPIO_IN;
     iot2050_pin_add_aio(b, pin_index, 3, mux_info, 4);
@@ -1043,7 +1094,7 @@ mraa_siemens_iot2050()
                         (regmux_info_t) {
                             PINMUX_GROUP_WAKUP,
                             30,
-                            WKUP_GPIO0_BASE+42,
+                            wkup_gpio0_base+42,
                             {
                                 7, /*GPIO*/
                                 -1, /*UART*/
@@ -1052,42 +1103,42 @@ mraa_siemens_iot2050()
                                 -1  /*PWM*/
                             }
                         });
-    mux_info[0].pin = D4200_GPIO_BASE+12;
+    mux_info[0].pin = d4200_gpio_base+12;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_OUT_LOW;
-    mux_info[1].pin = WKUP_GPIO0_BASE+21;
+    mux_info[1].pin = wkup_gpio0_base+21;
     mux_info[1].pincmd = PINCMD_SET_DIRECTION;
     mux_info[1].value = MRAA_GPIO_OUT_HIGH;
-    iot2050_pin_add_gpio(b, pin_index, 2, 42, WKUP_GPIO0_BASE+41, D4200_GPIO_BASE+4, mux_info, 2);
+    iot2050_pin_add_gpio(b, pin_index, wkup_gpio0_chip, 42, wkup_gpio0_base+41, d4200_gpio_base+4, mux_info, 2);
     // A/D/I switch
-    mux_info[0].pin = D4200_GPIO_BASE+12;
+    mux_info[0].pin = d4200_gpio_base+12;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_IN;
-    mux_info[1].pin = WKUP_GPIO0_BASE+21;
+    mux_info[1].pin = wkup_gpio0_base+21;
     mux_info[1].pincmd = PINCMD_SET_OUT_VALUE;
     mux_info[1].value = 0;
     // pull enable as input
-    mux_info[2].pin = D4200_GPIO_BASE+4;
+    mux_info[2].pin = d4200_gpio_base+4;
     mux_info[2].pincmd = PINCMD_SET_DIRECTION;
     mux_info[2].value = MRAA_GPIO_IN;
     iot2050_pin_add_i2c(b, pin_index, 0, mux_info, 3);
     // A/D/I switch
-    mux_info[0].pin = D4200_GPIO_BASE+12;
+    mux_info[0].pin = d4200_gpio_base+12;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_IN;
-    mux_info[1].pin = WKUP_GPIO0_BASE+21;
+    mux_info[1].pin = wkup_gpio0_base+21;
     mux_info[1].pincmd = PINCMD_SET_OUT_VALUE;
     mux_info[1].value = 1;
     // muxed GPIO as input
-    mux_info[2].pin = WKUP_GPIO0_BASE+42;
+    mux_info[2].pin = wkup_gpio0_base+42;
     mux_info[2].pincmd = PINCMD_SET_DIRECTION;
     mux_info[2].value = MRAA_GPIO_IN;
     // output enable as input
-    mux_info[3].pin = WKUP_GPIO0_BASE+41;
+    mux_info[3].pin = wkup_gpio0_base+41;
     mux_info[3].pincmd = PINCMD_SET_DIRECTION;
     mux_info[3].value = MRAA_GPIO_OUT_LOW;
     // pull enable as input
-    mux_info[4].pin = D4200_GPIO_BASE+4;
+    mux_info[4].pin = d4200_gpio_base+4;
     mux_info[4].pincmd = PINCMD_SET_DIRECTION;
     mux_info[4].value = MRAA_GPIO_IN;
     iot2050_pin_add_aio(b, pin_index, 4, mux_info, 5);
@@ -1106,7 +1157,7 @@ mraa_siemens_iot2050()
                         (regmux_info_t) {
                             PINMUX_GROUP_WAKUP,
                             23,
-                            WKUP_GPIO0_BASE+35,
+                            wkup_gpio0_base+35,
                             {
                                 7, /*GPIO*/
                                 -1, /*UART*/
@@ -1115,42 +1166,42 @@ mraa_siemens_iot2050()
                                 -1  /*PWM*/
                             }
                         });
-    mux_info[0].pin = D4200_GPIO_BASE+13;
+    mux_info[0].pin = d4200_gpio_base+13;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_OUT_LOW;
-    mux_info[1].pin = WKUP_GPIO0_BASE+21;
+    mux_info[1].pin = wkup_gpio0_base+21;
     mux_info[1].pincmd = PINCMD_SET_DIRECTION;
     mux_info[1].value = MRAA_GPIO_OUT_HIGH;
-    iot2050_pin_add_gpio(b, pin_index, 2, 35, D4201_GPIO_BASE+14, D4200_GPIO_BASE+5, mux_info, 2);
+    iot2050_pin_add_gpio(b, pin_index, wkup_gpio0_chip, 35, d4201_gpio_base+14, d4200_gpio_base+5, mux_info, 2);
     // A/D/I switch
-    mux_info[0].pin = D4200_GPIO_BASE+13;
+    mux_info[0].pin = d4200_gpio_base+13;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_IN;
-    mux_info[1].pin = WKUP_GPIO0_BASE+21;
+    mux_info[1].pin = wkup_gpio0_base+21;
     mux_info[1].pincmd = PINCMD_SET_OUT_VALUE;
     mux_info[1].value = 0;
     // pull enable as input
-    mux_info[2].pin = D4200_GPIO_BASE+5;
+    mux_info[2].pin = d4200_gpio_base+5;
     mux_info[2].pincmd = PINCMD_SET_DIRECTION;
     mux_info[2].value = MRAA_GPIO_IN;
     iot2050_pin_add_i2c(b, pin_index, 0, mux_info, 3);
     // A/D/I switch
-    mux_info[0].pin = D4200_GPIO_BASE+13;
+    mux_info[0].pin = d4200_gpio_base+13;
     mux_info[0].pincmd = PINCMD_SET_DIRECTION;
     mux_info[0].value = MRAA_GPIO_IN;
-    mux_info[1].pin = WKUP_GPIO0_BASE+21;
+    mux_info[1].pin = wkup_gpio0_base+21;
     mux_info[1].pincmd = PINCMD_SET_OUT_VALUE;
     mux_info[1].value = 1;
     // muxed GPIO as input
-    mux_info[2].pin = WKUP_GPIO0_BASE+35;
+    mux_info[2].pin = wkup_gpio0_base+35;
     mux_info[2].pincmd = PINCMD_SET_DIRECTION;
     mux_info[2].value = MRAA_GPIO_IN;
     // output enable as input
-    mux_info[3].pin = D4201_GPIO_BASE+14;
+    mux_info[3].pin = d4201_gpio_base+14;
     mux_info[3].pincmd = PINCMD_SET_DIRECTION;
     mux_info[3].value = MRAA_GPIO_OUT_LOW;
     // pull enable as input
-    mux_info[4].pin = D4200_GPIO_BASE+5;
+    mux_info[4].pin = d4200_gpio_base+5;
     mux_info[4].pincmd = PINCMD_SET_DIRECTION;
     mux_info[4].value = MRAA_GPIO_IN;
     iot2050_pin_add_aio(b, pin_index, 5, mux_info, 5);
-- 
2.26.2

