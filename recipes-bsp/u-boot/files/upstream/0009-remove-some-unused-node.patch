From 2aba94e6dbbb08168fb923519e9b463d71a375c3 Mon Sep 17 00:00:00 2001
From: chao zeng <chao.zeng@siemens.com>
Date: Sat, 17 Apr 2021 10:45:36 +0800
Subject: [PATCH 9/9] remove some unused node

Signed-off-by: chao zeng <chao.zeng@siemens.com>
---
 arch/arm/dts/Makefile                    |   6 +-
 arch/arm/dts/k3-am65-iot2050-common.dtsi | 614 +++++++++++------------
 2 files changed, 310 insertions(+), 310 deletions(-)

diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
index 018ca62937..652fc63c87 100644
--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -846,9 +846,9 @@ dtb-$(CONFIG_TARGET_STM32MP1) += \
 	stm32mp157c-ed1.dtb \
 	stm32mp157c-ev1.dtb
 
-dtb-$(CONFIG_SOC_K3_AM6) += k3-am654-base-board.dtb k3-am654-r5-base-board.dtb k3-am654-base-board-sr1.dtb \
-		k3-am654-pcie-usb2.dtbo k3-am654-idk.dtbo k3-am654-idk-sr1.dtbo \
-		k3-am654-pcie-usb3.dtbo
+# dtb-$(CONFIG_SOC_K3_AM6) += k3-am654-base-board.dtb k3-am654-r5-base-board.dtb k3-am654-base-board-sr1.dtb \
+# 		k3-am654-pcie-usb2.dtbo k3-am654-idk.dtbo k3-am654-idk-sr1.dtbo \
+# 		k3-am654-pcie-usb3.dtbo
 
 dtb-$(CONFIG_SOC_K3_AM6) += \
 	k3-am65-iot2050-spl.dtb \
diff --git a/arch/arm/dts/k3-am65-iot2050-common.dtsi b/arch/arm/dts/k3-am65-iot2050-common.dtsi
index 6ed44fa023..4d57e5ebe9 100644
--- a/arch/arm/dts/k3-am65-iot2050-common.dtsi
+++ b/arch/arm/dts/k3-am65-iot2050-common.dtsi
@@ -17,7 +17,7 @@
 		remoteproc0 = &mcu_r5fss0_core0;
 		remoteproc1 = &mcu_r5fss0_core1;
 		serial3 = &main_uart1;
-		ethernet0 = &pruss0_eth;
+		// ethernet0 = &pruss0_eth;
 	};
 
 	chosen {
@@ -37,152 +37,152 @@
 		};
 	};
 
-	gpio_leds {
-		compatible = "gpio-leds";
-		pinctrl-names = "default";
-		pinctrl-0 = <&leds_pins_default>;
-		u-boot,dm-spl;
-
-		status-led-red {
-			gpios = <&wkup_gpio0 32 GPIO_ACTIVE_HIGH>;
-			panic-indicator;
-			linux,default-trigger = "gpio";
-			u-boot,dm-spl;
-		};
-
-		status-led-green {
-			gpios = <&wkup_gpio0 24 GPIO_ACTIVE_HIGH>;
-			linux,default-trigger = "gpio";
-			u-boot,dm-spl;
-		};
-
-		user-led0-red {
-			gpios = <&pcal9535_3 14 GPIO_ACTIVE_HIGH>;
-			linux,default-trigger = "gpio";
-		};
-
-		user-led0-green {
-			gpios = <&pcal9535_2 15 GPIO_ACTIVE_HIGH>;
-			linux,default-trigger = "gpio";
-		};
-
-		user-led1-red {
-			gpios = <&wkup_gpio0 17 GPIO_ACTIVE_HIGH>;
-			linux,default-trigger = "gpio";
-		};
-
-		user-led1-green {
-			gpios = <&wkup_gpio0 22 GPIO_ACTIVE_HIGH>;
-			linux,default-trigger = "gpio";
-		};
-	};
-
-	dp_refclk: clock {
-		compatible = "fixed-clock";
-		#clock-cells = <0>;
-		clock-frequency = <19200000>;
-	};
-
-	/* Dual Ethernet application node on PRU-ICSSG0 */
-	pruss0_eth: pruss0_eth {
-		compatible = "ti,am654-icssg-prueth";
-		pinctrl-names = "default";
-		pinctrl-0 = <&icssg0_rgmii_pins_default>;
-		sram = <&icssg0_sram>;
-		clocks = <&k3_clks 62 3>;
-		clock-names = "mdio_fck";
-
-		prus = <&pru0_0>, <&rtu0_0>, <&pru0_1>, <&rtu0_1>;
-		firmware-name = "ti-pruss/am65x-pru0-prueth-fw.elf",
-				"ti-pruss/am65x-rtu0-prueth-fw.elf",
-				"ti-pruss/am65x-pru1-prueth-fw.elf",
-				"ti-pruss/am65x-rtu1-prueth-fw.elf";
-		mii-g-rt = <&icssg0_mii_g_rt>;
-		mii-rt = <&icssg0_mii_rt>;
-		dma-coherent;
-		dmas = <&mcu_udmap 0xc100>, /* egress slice 0 */
-				<&mcu_udmap 0xc101>, /* egress slice 0 */
-				<&mcu_udmap 0xc102>, /* egress slice 0 */
-				<&mcu_udmap 0xc103>, /* egress slice 0 */
-				<&mcu_udmap 0xc104>, /* egress slice 1 */
-				<&mcu_udmap 0xc105>, /* egress slice 1 */
-				<&mcu_udmap 0xc106>, /* egress slice 1 */
-				<&mcu_udmap 0xc107>, /* egress slice 1 */
-
-				<&mcu_udmap 0x4100>, /* ingress slice 0 */
-				<&mcu_udmap 0x4101>, /* ingress slice 1 */
-				<&mcu_udmap 0x4102>, /* mgmnt rsp slice 0 */
-				<&mcu_udmap 0x4103>; /* mgmnt rsp slice 1 */
-		dma-names = "tx0-0", "tx0-1", "tx0-2", "tx0-3",
-				"tx1-0", "tx1-1", "tx1-2", "tx1-3",
-				"rx0", "rx1",
-				"rxmgm0", "rxmgm1";
-
-		pruss0_emac0: ethernet-mii0 {
-			phy-handle = <&pruss0_eth0_phy>;
-			phy-mode = "rgmii-rxid";
-			syscon-rgmii-delay = <&scm_conf 0x4100>;
-			/* Filled in by bootloader */
-			local-mac-address = [00 00 00 00 00 00];
-		};
-
-/*
-* Commenting out the second mii interface as the framework
-* supports one interface in a single probe
-* So either mii1 or mii2 can be used. In case mii1 is needed
-* uncomment mii1 and comment out mii0
-		pruss0_emac1: ethernet-mii1 {
-			phy-handle = <&pruss0_eth1_phy>;
-			phy-mode = "rgmii-rxid";
-			syscon-rgmii-delay = <&scm_conf 0x4104>;
-			local-mac-address = [00 00 00 00 00 00];
-		};
-*/
-	};
+// 	gpio_leds {
+// 		compatible = "gpio-leds";
+// 		pinctrl-names = "default";
+// 		pinctrl-0 = <&leds_pins_default>;
+// 		u-boot,dm-spl;
+
+// 		status-led-red {
+// 			gpios = <&wkup_gpio0 32 GPIO_ACTIVE_HIGH>;
+// 			panic-indicator;
+// 			linux,default-trigger = "gpio";
+// 			u-boot,dm-spl;
+// 		};
+
+// 		status-led-green {
+// 			gpios = <&wkup_gpio0 24 GPIO_ACTIVE_HIGH>;
+// 			linux,default-trigger = "gpio";
+// 			u-boot,dm-spl;
+// 		};
+
+// 		user-led0-red {
+// 			gpios = <&pcal9535_3 14 GPIO_ACTIVE_HIGH>;
+// 			linux,default-trigger = "gpio";
+// 		};
+
+// 		user-led0-green {
+// 			gpios = <&pcal9535_2 15 GPIO_ACTIVE_HIGH>;
+// 			linux,default-trigger = "gpio";
+// 		};
+
+// 		user-led1-red {
+// 			gpios = <&wkup_gpio0 17 GPIO_ACTIVE_HIGH>;
+// 			linux,default-trigger = "gpio";
+// 		};
+
+// 		user-led1-green {
+// 			gpios = <&wkup_gpio0 22 GPIO_ACTIVE_HIGH>;
+// 			linux,default-trigger = "gpio";
+// 		};
+// 	};
+
+// 	dp_refclk: clock {
+// 		compatible = "fixed-clock";
+// 		#clock-cells = <0>;
+// 		clock-frequency = <19200000>;
+// 	};
+
+// 	/* Dual Ethernet application node on PRU-ICSSG0 */
+// 	pruss0_eth: pruss0_eth {
+// 		compatible = "ti,am654-icssg-prueth";
+// 		pinctrl-names = "default";
+// 		pinctrl-0 = <&icssg0_rgmii_pins_default>;
+// 		sram = <&icssg0_sram>;
+// 		clocks = <&k3_clks 62 3>;
+// 		clock-names = "mdio_fck";
+
+// 		prus = <&pru0_0>, <&rtu0_0>, <&pru0_1>, <&rtu0_1>;
+// 		firmware-name = "ti-pruss/am65x-pru0-prueth-fw.elf",
+// 				"ti-pruss/am65x-rtu0-prueth-fw.elf",
+// 				"ti-pruss/am65x-pru1-prueth-fw.elf",
+// 				"ti-pruss/am65x-rtu1-prueth-fw.elf";
+// 		mii-g-rt = <&icssg0_mii_g_rt>;
+// 		mii-rt = <&icssg0_mii_rt>;
+// 		dma-coherent;
+// 		dmas = <&mcu_udmap 0xc100>, /* egress slice 0 */
+// 				<&mcu_udmap 0xc101>, /* egress slice 0 */
+// 				<&mcu_udmap 0xc102>, /* egress slice 0 */
+// 				<&mcu_udmap 0xc103>, /* egress slice 0 */
+// 				<&mcu_udmap 0xc104>, /* egress slice 1 */
+// 				<&mcu_udmap 0xc105>, /* egress slice 1 */
+// 				<&mcu_udmap 0xc106>, /* egress slice 1 */
+// 				<&mcu_udmap 0xc107>, /* egress slice 1 */
+
+// 				<&mcu_udmap 0x4100>, /* ingress slice 0 */
+// 				<&mcu_udmap 0x4101>, /* ingress slice 1 */
+// 				<&mcu_udmap 0x4102>, /* mgmnt rsp slice 0 */
+// 				<&mcu_udmap 0x4103>; /* mgmnt rsp slice 1 */
+// 		dma-names = "tx0-0", "tx0-1", "tx0-2", "tx0-3",
+// 				"tx1-0", "tx1-1", "tx1-2", "tx1-3",
+// 				"rx0", "rx1",
+// 				"rxmgm0", "rxmgm1";
+
+// 		pruss0_emac0: ethernet-mii0 {
+// 			phy-handle = <&pruss0_eth0_phy>;
+// 			phy-mode = "rgmii-rxid";
+// 			syscon-rgmii-delay = <&scm_conf 0x4100>;
+// 			/* Filled in by bootloader */
+// 			local-mac-address = [00 00 00 00 00 00];
+// 		};
+
+// /*
+// * Commenting out the second mii interface as the framework
+// * supports one interface in a single probe
+// * So either mii1 or mii2 can be used. In case mii1 is needed
+// * uncomment mii1 and comment out mii0
+// 		pruss0_emac1: ethernet-mii1 {
+// 			phy-handle = <&pruss0_eth1_phy>;
+// 			phy-mode = "rgmii-rxid";
+// 			syscon-rgmii-delay = <&scm_conf 0x4104>;
+// 			local-mac-address = [00 00 00 00 00 00];
+// 		};
+// */
+// 	};
 };
 
 &cbass_main {
 	u-boot,dm-spl;
 
-	icssg0_mdio_pins_default: icssg0_mdio_pins_default {
-		pinctrl-single,pins = <
-			AM65X_IOPAD(0x0294, PIN_INPUT, 0) /* (AE26) PRG0_MDIO0_MDIO */
-			AM65X_IOPAD(0x0298, PIN_OUTPUT, 0) /* (AE28) PRG0_MDIO0_MDC */
-		>;
-	};
-
-	icssg0_rgmii_pins_default: icssg0_rgmii_pins_default {
-		pinctrl-single,pins = <
-			AM65X_IOPAD(0x0244, PIN_INPUT, 2) /* (AB28) PRG0_PRU1_GPO0.PRG0_RGMII2_RD0 */
-			AM65X_IOPAD(0x0248, PIN_INPUT, 2) /* (AC28) PRG0_PRU1_GPO1.PRG0_RGMII2_RD1 */
-			AM65X_IOPAD(0x024c, PIN_INPUT, 2) /* (AC27) PRG0_PRU1_GPO2.PRG0_RGMII2_RD2 */
-			AM65X_IOPAD(0x0250, PIN_INPUT, 2) /* (AB26) PRG0_PRU1_GPO3.PRG0_RGMII2_RD3 */
-			AM65X_IOPAD(0x0274, PIN_OUTPUT, 2) /* (AC25) PRG0_PRU1_GPO12.PRG0_RGMII2_TD0 */
-			AM65X_IOPAD(0x0278, PIN_OUTPUT, 2) /* (AD25) PRG0_PRU1_GPO13.PRG0_RGMII2_TD1 */
-			AM65X_IOPAD(0x027c, PIN_OUTPUT, 2) /* (AD24) PRG0_PRU1_GPO14.PRG0_RGMII2_TD2 */
-			AM65X_IOPAD(0x0280, PIN_OUTPUT, 2) /* (AE27) PRG0_PRU1_GPO15.PRG0_RGMII2_TD3 */
-			AM65X_IOPAD(0x0284, PIN_INPUT, 2) /* (AC24) PRG0_PRU1_GPO16.PRG0_RGMII2_TXC */
-			AM65X_IOPAD(0x0270, PIN_OUTPUT, 2) /* (AB24) PRG0_PRU1_GPO11.PRG0_RGMII2_TX_CTL */
-			AM65X_IOPAD(0x025c, PIN_INPUT, 2) /* (AB27) PRG0_PRU1_GPO6.PRG0_RGMII2_RXC */
-			AM65X_IOPAD(0x0254, PIN_INPUT, 2) /* (AA25) PRG0_PRU1_GPO4.PRG0_RGMII2_RX_CTL */
-
-			AM65X_IOPAD(0x01f4, PIN_INPUT, 2) /* (V24) PRG0_PRU0_GPO0.PRG0_RGMII1_RD0 */
-			AM65X_IOPAD(0x01f8, PIN_INPUT, 2) /* (W25) PRG0_PRU0_GPO1.PRG0_RGMII1_RD1 */
-			AM65X_IOPAD(0x01fc, PIN_INPUT, 2) /* (W24) PRG0_PRU0_GPO2.PRG0_RGMII1_RD2 */
-			AM65X_IOPAD(0x0200, PIN_INPUT, 2) /* (AA27) PRG0_PRU0_GPO3.PRG0_RGMII1_RD3 */
-			AM65X_IOPAD(0x0224, PIN_OUTPUT, 2) /* (AD27) PRG0_PRU0_GPO12.PRG0_RGMII1_TD0 */
-			AM65X_IOPAD(0x0228, PIN_OUTPUT, 2) /* (AC26) PRG0_PRU0_GPO13.PRG0_RGMII1_TD1 */
-			AM65X_IOPAD(0x022c, PIN_OUTPUT, 2) /* (AD26) PRG0_PRU0_GPO14.PRG0_RGMII1_TD2 */
-			AM65X_IOPAD(0x0230, PIN_OUTPUT, 2) /* (AA24) PRG0_PRU0_GPO15.PRG0_RGMII1_TD3 */
-			AM65X_IOPAD(0x0234, PIN_INPUT, 2) /* (AD28) PRG0_PRU0_GPO16.PRG0_RGMII1_TXC */
-			AM65X_IOPAD(0x0220, PIN_OUTPUT, 2) /* (AB25) PRG0_PRU0_GPO11.PRG0_RGMII1_TX_CTL */
-			AM65X_IOPAD(0x020c, PIN_INPUT, 2) /* (Y25) PRG0_PRU0_GPO6.PRG0_RGMII1_RXC */
-			AM65X_IOPAD(0x0204, PIN_INPUT, 2) /* (Y24) PRG0_PRU0_GPO4.PRG0_RGMII1_RX_CTL */
-			/* HACK As there is no driver for mdio */
-			AM65X_IOPAD(0x0294, PIN_INPUT , 0) /* (AE26) PRG0_MDIO0_MDIO */
-			AM65X_IOPAD(0x0298, PIN_OUTPUT , 0) /* (AE28) PRG0_MDIO0_MDC */
-		>;
-	};
+	// icssg0_mdio_pins_default: icssg0_mdio_pins_default {
+	// 	pinctrl-single,pins = <
+	// 		AM65X_IOPAD(0x0294, PIN_INPUT, 0) /* (AE26) PRG0_MDIO0_MDIO */
+	// 		AM65X_IOPAD(0x0298, PIN_OUTPUT, 0) /* (AE28) PRG0_MDIO0_MDC */
+	// 	>;
+	// };
+
+	// icssg0_rgmii_pins_default: icssg0_rgmii_pins_default {
+	// 	pinctrl-single,pins = <
+	// 		AM65X_IOPAD(0x0244, PIN_INPUT, 2) /* (AB28) PRG0_PRU1_GPO0.PRG0_RGMII2_RD0 */
+	// 		AM65X_IOPAD(0x0248, PIN_INPUT, 2) /* (AC28) PRG0_PRU1_GPO1.PRG0_RGMII2_RD1 */
+	// 		AM65X_IOPAD(0x024c, PIN_INPUT, 2) /* (AC27) PRG0_PRU1_GPO2.PRG0_RGMII2_RD2 */
+	// 		AM65X_IOPAD(0x0250, PIN_INPUT, 2) /* (AB26) PRG0_PRU1_GPO3.PRG0_RGMII2_RD3 */
+	// 		AM65X_IOPAD(0x0274, PIN_OUTPUT, 2) /* (AC25) PRG0_PRU1_GPO12.PRG0_RGMII2_TD0 */
+	// 		AM65X_IOPAD(0x0278, PIN_OUTPUT, 2) /* (AD25) PRG0_PRU1_GPO13.PRG0_RGMII2_TD1 */
+	// 		AM65X_IOPAD(0x027c, PIN_OUTPUT, 2) /* (AD24) PRG0_PRU1_GPO14.PRG0_RGMII2_TD2 */
+	// 		AM65X_IOPAD(0x0280, PIN_OUTPUT, 2) /* (AE27) PRG0_PRU1_GPO15.PRG0_RGMII2_TD3 */
+	// 		AM65X_IOPAD(0x0284, PIN_INPUT, 2) /* (AC24) PRG0_PRU1_GPO16.PRG0_RGMII2_TXC */
+	// 		AM65X_IOPAD(0x0270, PIN_OUTPUT, 2) /* (AB24) PRG0_PRU1_GPO11.PRG0_RGMII2_TX_CTL */
+	// 		AM65X_IOPAD(0x025c, PIN_INPUT, 2) /* (AB27) PRG0_PRU1_GPO6.PRG0_RGMII2_RXC */
+	// 		AM65X_IOPAD(0x0254, PIN_INPUT, 2) /* (AA25) PRG0_PRU1_GPO4.PRG0_RGMII2_RX_CTL */
+
+	// 		AM65X_IOPAD(0x01f4, PIN_INPUT, 2) /* (V24) PRG0_PRU0_GPO0.PRG0_RGMII1_RD0 */
+	// 		AM65X_IOPAD(0x01f8, PIN_INPUT, 2) /* (W25) PRG0_PRU0_GPO1.PRG0_RGMII1_RD1 */
+	// 		AM65X_IOPAD(0x01fc, PIN_INPUT, 2) /* (W24) PRG0_PRU0_GPO2.PRG0_RGMII1_RD2 */
+	// 		AM65X_IOPAD(0x0200, PIN_INPUT, 2) /* (AA27) PRG0_PRU0_GPO3.PRG0_RGMII1_RD3 */
+	// 		AM65X_IOPAD(0x0224, PIN_OUTPUT, 2) /* (AD27) PRG0_PRU0_GPO12.PRG0_RGMII1_TD0 */
+	// 		AM65X_IOPAD(0x0228, PIN_OUTPUT, 2) /* (AC26) PRG0_PRU0_GPO13.PRG0_RGMII1_TD1 */
+	// 		AM65X_IOPAD(0x022c, PIN_OUTPUT, 2) /* (AD26) PRG0_PRU0_GPO14.PRG0_RGMII1_TD2 */
+	// 		AM65X_IOPAD(0x0230, PIN_OUTPUT, 2) /* (AA24) PRG0_PRU0_GPO15.PRG0_RGMII1_TD3 */
+	// 		AM65X_IOPAD(0x0234, PIN_INPUT, 2) /* (AD28) PRG0_PRU0_GPO16.PRG0_RGMII1_TXC */
+	// 		AM65X_IOPAD(0x0220, PIN_OUTPUT, 2) /* (AB25) PRG0_PRU0_GPO11.PRG0_RGMII1_TX_CTL */
+	// 		AM65X_IOPAD(0x020c, PIN_INPUT, 2) /* (Y25) PRG0_PRU0_GPO6.PRG0_RGMII1_RXC */
+	// 		AM65X_IOPAD(0x0204, PIN_INPUT, 2) /* (Y24) PRG0_PRU0_GPO4.PRG0_RGMII1_RX_CTL */
+	// 		/* HACK As there is no driver for mdio */
+	// 		AM65X_IOPAD(0x0294, PIN_INPUT , 0) /* (AE26) PRG0_MDIO0_MDIO */
+	// 		AM65X_IOPAD(0x0298, PIN_OUTPUT , 0) /* (AE28) PRG0_MDIO0_MDC */
+	// 	>;
+	// };
 };
 
 &sdhci1 {
@@ -192,25 +192,25 @@
 	disable-wp;
 };
 
-&icssg0_mdio {
-	status = "okay";
-	pinctrl-names = "default";
-	pinctrl-0 = <&icssg0_mdio_pins_default>;
-	#address-cells = <1>;
-	#size-cells = <0>;
-
-	pruss0_eth0_phy: ethernet-phy@0 {
-		reg = <0>;
-		ti,rx-internal-delay = <DP83867_RGMIIDCTL_2_00_NS>;
-		ti,fifo-depth = <DP83867_PHYCR_FIFO_DEPTH_4_B_NIB>;
-	};
+// &icssg0_mdio {
+// 	status = "okay";
+// 	pinctrl-names = "default";
+// 	pinctrl-0 = <&icssg0_mdio_pins_default>;
+// 	#address-cells = <1>;
+// 	#size-cells = <0>;
 
-	pruss0_eth1_phy: ethernet-phy@3 {
-		reg = <3>;
-		ti,rx-internal-delay = <DP83867_RGMIIDCTL_2_00_NS>;
-		ti,fifo-depth = <DP83867_PHYCR_FIFO_DEPTH_4_B_NIB>;
-	};
-};
+// 	pruss0_eth0_phy: ethernet-phy@0 {
+// 		reg = <0>;
+// 		ti,rx-internal-delay = <DP83867_RGMIIDCTL_2_00_NS>;
+// 		ti,fifo-depth = <DP83867_PHYCR_FIFO_DEPTH_4_B_NIB>;
+// 	};
+
+// 	pruss0_eth1_phy: ethernet-phy@3 {
+// 		reg = <3>;
+// 		ti,rx-internal-delay = <DP83867_RGMIIDCTL_2_00_NS>;
+// 		ti,fifo-depth = <DP83867_PHYCR_FIFO_DEPTH_4_B_NIB>;
+// 	};
+// };
 
 &cbass_mcu {
 	u-boot,dm-spl;
@@ -249,41 +249,41 @@
 		>;
 	};
 
-	arduino_i2c_aio_switch_pins_default: arduino_i2c_aio_switch_pins_default {
-		pinctrl-single,pins = <
-			AM65X_WKUP_IOPAD(0x0024, PIN_OUTPUT, 7)  /* (R2) WKUP_GPIO0_21 */
-		>;
-	};
-
-	push_button_pins_default: push_button_pins_default {
-		pinctrl-single,pins = <
-			AM65X_WKUP_IOPAD(0x0034, PIN_INPUT,  7)  /* (T1) MCU_OSPI1_CLK.WKUP_GPIO0_25 */
-		>;
-	};
-
-	arduino_uart_pins_default: arduino_uart_pins_default {
-		pinctrl-single,pins = <
-			AM65X_WKUP_IOPAD(0x0044, PIN_INPUT,  4)  /* (P4) MCU_UART0_RXD */
-			AM65X_WKUP_IOPAD(0x0048, PIN_OUTPUT, 4)  /* (P5) MCU_UART0_TXD */
-		>;
-	};
-
-	arduino_io_d2_to_d3_pins_default: arduino_io_d2_to_d3_pins_default {
-		pinctrl-single,pins = <
-			AM65X_WKUP_IOPAD(0x004C, PIN_OUTPUT, 7)  /* (P1) WKUP_GPIO0_31 */
-			AM65X_WKUP_IOPAD(0x0054, PIN_OUTPUT, 7)  /* (N3) WKUP_GPIO0_33 */
-		>;
-	};
-
-	arduino_io_oe_pins_default: arduino_io_oe_pins_default {
-		pinctrl-single,pins = <
-			AM65X_WKUP_IOPAD(0x0058, PIN_OUTPUT, 7)  /* (N4) WKUP_GPIO0_34 */
-			AM65X_WKUP_IOPAD(0x0060, PIN_OUTPUT, 7)  /* (M2) WKUP_GPIO0_36 */
-			AM65X_WKUP_IOPAD(0x0064, PIN_OUTPUT, 7)  /* (M3) WKUP_GPIO0_37 */
-			AM65X_WKUP_IOPAD(0x0068, PIN_OUTPUT, 7)  /* (M4) WKUP_GPIO0_38 */
-			AM65X_WKUP_IOPAD(0x0074, PIN_OUTPUT, 7)  /* (M1) WKUP_GPIO0_41 */
-		>;
-	};
+	// arduino_i2c_aio_switch_pins_default: arduino_i2c_aio_switch_pins_default {
+	// 	pinctrl-single,pins = <
+	// 		AM65X_WKUP_IOPAD(0x0024, PIN_OUTPUT, 7)  /* (R2) WKUP_GPIO0_21 */
+	// 	>;
+	// };
+
+	// push_button_pins_default: push_button_pins_default {
+	// 	pinctrl-single,pins = <
+	// 		AM65X_WKUP_IOPAD(0x0034, PIN_INPUT,  7)  /* (T1) MCU_OSPI1_CLK.WKUP_GPIO0_25 */
+	// 	>;
+	// };
+
+	// arduino_uart_pins_default: arduino_uart_pins_default {
+	// 	pinctrl-single,pins = <
+	// 		AM65X_WKUP_IOPAD(0x0044, PIN_INPUT,  4)  /* (P4) MCU_UART0_RXD */
+	// 		AM65X_WKUP_IOPAD(0x0048, PIN_OUTPUT, 4)  /* (P5) MCU_UART0_TXD */
+	// 	>;
+	// };
+
+	// arduino_io_d2_to_d3_pins_default: arduino_io_d2_to_d3_pins_default {
+	// 	pinctrl-single,pins = <
+	// 		AM65X_WKUP_IOPAD(0x004C, PIN_OUTPUT, 7)  /* (P1) WKUP_GPIO0_31 */
+	// 		AM65X_WKUP_IOPAD(0x0054, PIN_OUTPUT, 7)  /* (N3) WKUP_GPIO0_33 */
+	// 	>;
+	// };
+
+	// arduino_io_oe_pins_default: arduino_io_oe_pins_default {
+	// 	pinctrl-single,pins = <
+	// 		AM65X_WKUP_IOPAD(0x0058, PIN_OUTPUT, 7)  /* (N4) WKUP_GPIO0_34 */
+	// 		AM65X_WKUP_IOPAD(0x0060, PIN_OUTPUT, 7)  /* (M2) WKUP_GPIO0_36 */
+	// 		AM65X_WKUP_IOPAD(0x0064, PIN_OUTPUT, 7)  /* (M3) WKUP_GPIO0_37 */
+	// 		AM65X_WKUP_IOPAD(0x0068, PIN_OUTPUT, 7)  /* (M4) WKUP_GPIO0_38 */
+	// 		AM65X_WKUP_IOPAD(0x0074, PIN_OUTPUT, 7)  /* (M1) WKUP_GPIO0_41 */
+	// 	>;
+	// };
 
 	mcu_fss0_ospi0_pins_default: mcu_fss0_ospi0_pins_default {
 		pinctrl-single,pins = <
@@ -296,14 +296,14 @@
 		u-boot,dm-spl;
 	};
 
-	db9_com_mode_pins_default: db9_com_mode_pins_default {
-		pinctrl-single,pins = <
-			AM65X_WKUP_IOPAD(0x00c4, PIN_OUTPUT, 7)  /* (AD3) WKUP_GPIO0_5, used as uart0 mode 0 */
-			AM65X_WKUP_IOPAD(0x00c0, PIN_OUTPUT, 7)  /* (AC3) WKUP_GPIO0_4, used as uart0 mode 1 */
-			AM65X_WKUP_IOPAD(0x00cc, PIN_OUTPUT, 7)  /* (AC1) WKUP_GPIO0_7, used as uart0 term */
-			AM65X_WKUP_IOPAD(0x00c8, PIN_OUTPUT, 7)  /* (AC2) WKUP_GPIO0_6, used as uart0 en */
-		>;
-	};
+	// db9_com_mode_pins_default: db9_com_mode_pins_default {
+	// 	pinctrl-single,pins = <
+	// 		AM65X_WKUP_IOPAD(0x00c4, PIN_OUTPUT, 7)  /* (AD3) WKUP_GPIO0_5, used as uart0 mode 0 */
+	// 		AM65X_WKUP_IOPAD(0x00c0, PIN_OUTPUT, 7)  /* (AC3) WKUP_GPIO0_4, used as uart0 mode 1 */
+	// 		AM65X_WKUP_IOPAD(0x00cc, PIN_OUTPUT, 7)  /* (AC1) WKUP_GPIO0_7, used as uart0 term */
+	// 		AM65X_WKUP_IOPAD(0x00c8, PIN_OUTPUT, 7)  /* (AC2) WKUP_GPIO0_6, used as uart0 en */
+	// 	>;
+	// };
 
 	leds_pins_default: leds_pins_default {
 		pinctrl-single,pins = <
@@ -314,20 +314,20 @@
 		>;
 	};
 
-	mcu_spi0_pins_default: mcu_spi0_pins_default {
-		pinctrl-single,pins = <
-			AM65X_WKUP_IOPAD(0x0090, PIN_INPUT,  0)  /* (Y1) MCU_SPI0_CLK */
-			AM65X_WKUP_IOPAD(0x0094, PIN_INPUT,  0)  /* (Y3) MCU_SPI0_D0 */
-			AM65X_WKUP_IOPAD(0x0098, PIN_INPUT,  0)  /* (Y2) MCU_SPI0_D1 */
-			AM65X_WKUP_IOPAD(0x009c, PIN_OUTPUT, 0)  /* (Y4) MCU_SPI0_CS0 */
-		>;
-	};
+	// mcu_spi0_pins_default: mcu_spi0_pins_default {
+	// 	pinctrl-single,pins = <
+	// 		AM65X_WKUP_IOPAD(0x0090, PIN_INPUT,  0)  /* (Y1) MCU_SPI0_CLK */
+	// 		AM65X_WKUP_IOPAD(0x0094, PIN_INPUT,  0)  /* (Y3) MCU_SPI0_D0 */
+	// 		AM65X_WKUP_IOPAD(0x0098, PIN_INPUT,  0)  /* (Y2) MCU_SPI0_D1 */
+	// 		AM65X_WKUP_IOPAD(0x009c, PIN_OUTPUT, 0)  /* (Y4) MCU_SPI0_CS0 */
+	// 	>;
+	// };
 
-	minipcie_pins_default: minipcie_pins_default {
-		pinctrl-single,pins = <
-			AM65X_WKUP_IOPAD(0x003C, PIN_OUTPUT, 7)  /* (P2) MCU_OSPI1_DQS.WKUP_GPIO0_27 */
-		>;
-	};
+	// minipcie_pins_default: minipcie_pins_default {
+	// 	pinctrl-single,pins = <
+	// 		AM65X_WKUP_IOPAD(0x003C, PIN_OUTPUT, 7)  /* (P2) MCU_OSPI1_DQS.WKUP_GPIO0_27 */
+	// 	>;
+	// };
 };
 
 &main_pmx0 {
@@ -375,55 +375,55 @@
 		>;
 	};
 
-	arduino_io_d4_to_d9_pins_default: arduino_io_d4_to_d9_pins_default {
-		pinctrl-single,pins = <
-			AM65X_IOPAD(0x0084, PIN_OUTPUT, 7)  /* (AG18) GPIO0_33 */
-			AM65X_IOPAD(0x008C, PIN_OUTPUT, 7)  /* (AF17) GPIO0_35 */
-			AM65X_IOPAD(0x0098, PIN_OUTPUT, 7)  /* (AH16) GPIO0_38 */
-			AM65X_IOPAD(0x00AC, PIN_OUTPUT, 7)  /* (AH15) GPIO0_43 */
-			AM65X_IOPAD(0x00C0, PIN_OUTPUT, 7)  /* (AG15) GPIO0_48 */
-			AM65X_IOPAD(0x00CC, PIN_OUTPUT, 7)  /* (AD15) GPIO0_51 */
-		>;
-	};
-
-	dss_vout1_pins_default: dss_vout1_pins_default {
-		pinctrl-single,pins = <
-			AM65X_IOPAD(0x0000, PIN_OUTPUT, 1)  /* VOUT1_DATA0 */
-			AM65X_IOPAD(0x0004, PIN_OUTPUT, 1)  /* VOUT1_DATA1 */
-			AM65X_IOPAD(0x0008, PIN_OUTPUT, 1)  /* VOUT1_DATA2 */
-			AM65X_IOPAD(0x000c, PIN_OUTPUT, 1)  /* VOUT1_DATA3 */
-			AM65X_IOPAD(0x0010, PIN_OUTPUT, 1)  /* VOUT1_DATA4 */
-			AM65X_IOPAD(0x0014, PIN_OUTPUT, 1)  /* VOUT1_DATA5 */
-			AM65X_IOPAD(0x0018, PIN_OUTPUT, 1)  /* VOUT1_DATA6 */
-			AM65X_IOPAD(0x001c, PIN_OUTPUT, 1)  /* VOUT1_DATA7 */
-			AM65X_IOPAD(0x0020, PIN_OUTPUT, 1)  /* VOUT1_DATA8 */
-			AM65X_IOPAD(0x0024, PIN_OUTPUT, 1)  /* VOUT1_DATA9 */
-			AM65X_IOPAD(0x0028, PIN_OUTPUT, 1)  /* VOUT1_DATA10 */
-			AM65X_IOPAD(0x002c, PIN_OUTPUT, 1)  /* VOUT1_DATA11 */
-			AM65X_IOPAD(0x0030, PIN_OUTPUT, 1)  /* VOUT1_DATA12 */
-			AM65X_IOPAD(0x0034, PIN_OUTPUT, 1)  /* VOUT1_DATA13 */
-			AM65X_IOPAD(0x0038, PIN_OUTPUT, 1)  /* VOUT1_DATA14 */
-			AM65X_IOPAD(0x003c, PIN_OUTPUT, 1)  /* VOUT1_DATA15 */
-			AM65X_IOPAD(0x0040, PIN_OUTPUT, 1)  /* VOUT1_DATA16 */
-			AM65X_IOPAD(0x0044, PIN_OUTPUT, 1)  /* VOUT1_DATA17 */
-			AM65X_IOPAD(0x0048, PIN_OUTPUT, 1)  /* VOUT1_DATA18 */
-			AM65X_IOPAD(0x004c, PIN_OUTPUT, 1)  /* VOUT1_DATA19 */
-			AM65X_IOPAD(0x0050, PIN_OUTPUT, 1)  /* VOUT1_DATA20 */
-			AM65X_IOPAD(0x0054, PIN_OUTPUT, 1)  /* VOUT1_DATA21 */
-			AM65X_IOPAD(0x0058, PIN_OUTPUT, 1)  /* VOUT1_DATA22 */
-			AM65X_IOPAD(0x005c, PIN_OUTPUT, 1)  /* VOUT1_DATA23 */
-			AM65X_IOPAD(0x0060, PIN_OUTPUT, 1)  /* VOUT1_VSYNC */
-			AM65X_IOPAD(0x0064, PIN_OUTPUT, 1)  /* VOUT1_HSYNC */
-			AM65X_IOPAD(0x0068, PIN_OUTPUT, 1)  /* VOUT1_PCLK */
-			AM65X_IOPAD(0x006c, PIN_OUTPUT, 1)  /* VOUT1_DE */
-		>;
-	};
-
-	dp_pins_default: dp_pins_default {
-		pinctrl-single,pins = <
-			AM65X_IOPAD(0x0078, PIN_OUTPUT, 7)  /* (AF18) DP rst_n */
-		>;
-	};
+	// arduino_io_d4_to_d9_pins_default: arduino_io_d4_to_d9_pins_default {
+	// 	pinctrl-single,pins = <
+	// 		AM65X_IOPAD(0x0084, PIN_OUTPUT, 7)  /* (AG18) GPIO0_33 */
+	// 		AM65X_IOPAD(0x008C, PIN_OUTPUT, 7)  /* (AF17) GPIO0_35 */
+	// 		AM65X_IOPAD(0x0098, PIN_OUTPUT, 7)  /* (AH16) GPIO0_38 */
+	// 		AM65X_IOPAD(0x00AC, PIN_OUTPUT, 7)  /* (AH15) GPIO0_43 */
+	// 		AM65X_IOPAD(0x00C0, PIN_OUTPUT, 7)  /* (AG15) GPIO0_48 */
+	// 		AM65X_IOPAD(0x00CC, PIN_OUTPUT, 7)  /* (AD15) GPIO0_51 */
+	// 	>;
+	// };
+
+	// dss_vout1_pins_default: dss_vout1_pins_default {
+	// 	pinctrl-single,pins = <
+	// 		AM65X_IOPAD(0x0000, PIN_OUTPUT, 1)  /* VOUT1_DATA0 */
+	// 		AM65X_IOPAD(0x0004, PIN_OUTPUT, 1)  /* VOUT1_DATA1 */
+	// 		AM65X_IOPAD(0x0008, PIN_OUTPUT, 1)  /* VOUT1_DATA2 */
+	// 		AM65X_IOPAD(0x000c, PIN_OUTPUT, 1)  /* VOUT1_DATA3 */
+	// 		AM65X_IOPAD(0x0010, PIN_OUTPUT, 1)  /* VOUT1_DATA4 */
+	// 		AM65X_IOPAD(0x0014, PIN_OUTPUT, 1)  /* VOUT1_DATA5 */
+	// 		AM65X_IOPAD(0x0018, PIN_OUTPUT, 1)  /* VOUT1_DATA6 */
+	// 		AM65X_IOPAD(0x001c, PIN_OUTPUT, 1)  /* VOUT1_DATA7 */
+	// 		AM65X_IOPAD(0x0020, PIN_OUTPUT, 1)  /* VOUT1_DATA8 */
+	// 		AM65X_IOPAD(0x0024, PIN_OUTPUT, 1)  /* VOUT1_DATA9 */
+	// 		AM65X_IOPAD(0x0028, PIN_OUTPUT, 1)  /* VOUT1_DATA10 */
+	// 		AM65X_IOPAD(0x002c, PIN_OUTPUT, 1)  /* VOUT1_DATA11 */
+	// 		AM65X_IOPAD(0x0030, PIN_OUTPUT, 1)  /* VOUT1_DATA12 */
+	// 		AM65X_IOPAD(0x0034, PIN_OUTPUT, 1)  /* VOUT1_DATA13 */
+	// 		AM65X_IOPAD(0x0038, PIN_OUTPUT, 1)  /* VOUT1_DATA14 */
+	// 		AM65X_IOPAD(0x003c, PIN_OUTPUT, 1)  /* VOUT1_DATA15 */
+	// 		AM65X_IOPAD(0x0040, PIN_OUTPUT, 1)  /* VOUT1_DATA16 */
+	// 		AM65X_IOPAD(0x0044, PIN_OUTPUT, 1)  /* VOUT1_DATA17 */
+	// 		AM65X_IOPAD(0x0048, PIN_OUTPUT, 1)  /* VOUT1_DATA18 */
+	// 		AM65X_IOPAD(0x004c, PIN_OUTPUT, 1)  /* VOUT1_DATA19 */
+	// 		AM65X_IOPAD(0x0050, PIN_OUTPUT, 1)  /* VOUT1_DATA20 */
+	// 		AM65X_IOPAD(0x0054, PIN_OUTPUT, 1)  /* VOUT1_DATA21 */
+	// 		AM65X_IOPAD(0x0058, PIN_OUTPUT, 1)  /* VOUT1_DATA22 */
+	// 		AM65X_IOPAD(0x005c, PIN_OUTPUT, 1)  /* VOUT1_DATA23 */
+	// 		AM65X_IOPAD(0x0060, PIN_OUTPUT, 1)  /* VOUT1_VSYNC */
+	// 		AM65X_IOPAD(0x0064, PIN_OUTPUT, 1)  /* VOUT1_HSYNC */
+	// 		AM65X_IOPAD(0x0068, PIN_OUTPUT, 1)  /* VOUT1_PCLK */
+	// 		AM65X_IOPAD(0x006c, PIN_OUTPUT, 1)  /* VOUT1_DE */
+	// 	>;
+	// };
+
+	// dp_pins_default: dp_pins_default {
+	// 	pinctrl-single,pins = <
+	// 		AM65X_IOPAD(0x0078, PIN_OUTPUT, 7)  /* (AF18) DP rst_n */
+	// 	>;
+	// };
 
 	main_i2c2_pins_default: main_i2c2_pins_default {
 		pinctrl-single,pins = <
@@ -448,11 +448,11 @@
 		>;
 	};
 
-	ecap0_pins_default: ecap0-pins-default {
-		pinctrl-single,pins = <
-			AM65X_IOPAD(0x0010, PIN_INPUT,  0)  /* (D21) ECAP0_IN_APWM_OUT */
-		>;
-	};
+	// ecap0_pins_default: ecap0-pins-default {
+	// 	pinctrl-single,pins = <
+	// 		AM65X_IOPAD(0x0010, PIN_INPUT,  0)  /* (D21) ECAP0_IN_APWM_OUT */
+	// 	>;
+	// };
 };
 
 &msmc_ram {
@@ -482,21 +482,21 @@
 	status = "disabled";
 };
 
-&mcu_uart0 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&arduino_uart_pins_default>;
-};
+// &mcu_uart0 {
+// 	pinctrl-names = "default";
+// 	pinctrl-0 = <&arduino_uart_pins_default>;
+// };
 
-&wkup_gpio0 {
-	pinctrl-names = "default";
-	pinctrl-0 = <
-		&arduino_io_d2_to_d3_pins_default
-		&arduino_i2c_aio_switch_pins_default
-		&arduino_io_oe_pins_default
-		&push_button_pins_default
-		&db9_com_mode_pins_default
-	>;
-};
+// &wkup_gpio0 {
+// 	pinctrl-names = "default";
+// 	pinctrl-0 = <
+// 		&arduino_io_d2_to_d3_pins_default
+// 		&arduino_i2c_aio_switch_pins_default
+// 		&arduino_io_oe_pins_default
+// 		&push_button_pins_default
+// 		&db9_com_mode_pins_default
+// 	>;
+// };
 
 &wkup_i2c0 {
 	pinctrl-names = "default";
@@ -525,29 +525,29 @@
 		ti,enable-vout-discharge;
 	};
 
-	/*D4200*/
-	pcal9535_1: gpio@20 {
-		compatible = "nxp,pcal9535";
-		reg = <0x20>;
-		#gpio-cells = <2>;
-		gpio-controller;
-	};
-
-	/*D4201*/
-	pcal9535_2: gpio@21 {
-		compatible = "nxp,pcal9535";
-		reg = <0x21>;
-		#gpio-cells = <2>;
-		gpio-controller;
-	};
-
-	/*D4202*/
-	pcal9535_3: gpio@25 {
-		compatible = "nxp,pcal9535";
-		reg = <0x25>;
-		#gpio-cells = <2>;
-		gpio-controller;
-	};
+	// /*D4200*/
+	// pcal9535_1: gpio@20 {
+	// 	compatible = "nxp,pcal9535";
+	// 	reg = <0x20>;
+	// 	#gpio-cells = <2>;
+	// 	gpio-controller;
+	// };
+
+	// /*D4201*/
+	// pcal9535_2: gpio@21 {
+	// 	compatible = "nxp,pcal9535";
+	// 	reg = <0x21>;
+	// 	#gpio-cells = <2>;
+	// 	gpio-controller;
+	// };
+
+	// /*D4202*/
+	// pcal9535_3: gpio@25 {
+	// 	compatible = "nxp,pcal9535";
+	// 	reg = <0x25>;
+	// 	#gpio-cells = <2>;
+	// 	gpio-controller;
+	// };
 };
 
 &main_i2c0 {
-- 
2.17.1

